{"version":3,"sources":["App.js","index.js"],"names":["App","props","selectProduct","i","setState","current_product","count_to_sell","changeCountToSell","count","parseInt","target","value","product","state","products","inventory","name","title","price","rare","this","max_to_sell","sum_to_sell","products_list","map","item","className","onClick","min","max","onChange","type","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAKqBA,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAeVC,cAAgB,SAACC,GACb,EAAKC,SAAS,CAAEC,gBAAiBF,EAAGG,cAAe,KAjBpC,EAmBnBC,kBAAoB,SAACC,GACI,kBAAVA,IACPA,EAAQC,SAASD,EAAME,OAAOC,QAElC,IAAIC,EAAU,EAAKC,MAAMC,SAAS,EAAKD,MAAMR,iBACzCG,EAAQI,EAAQG,UAChBP,EAAQI,EAAQG,UACXP,EAAQ,IACbA,EAAQ,GAEZ,EAAKJ,SAAS,CAAEE,cAAeE,GAAS,KA3BxC,EAAKK,MAAQ,CACTC,SAAU,CACN,CAACE,KAAM,SAAUC,MAAO,uCAAUC,MAAO,IAAKC,KAAM,EAAGJ,UAAW,IAClE,CAACC,KAAM,WAAYC,MAAO,6CAAWC,MAAO,IAAKC,KAAM,EAAGJ,UAAW,GACrE,CAACC,KAAM,WAAYC,MAAO,iCAASC,MAAO,IAAKC,KAAM,EAAGJ,UAAW,IACnE,CAACC,KAAM,QAASC,MAAO,wFAAmBC,MAAO,GAAIC,KAAM,EAAGJ,UAAW,GACzE,CAACC,KAAM,WAAYC,MAAO,2BAAQC,MAAO,IAAKC,KAAM,EAAGJ,UAAW,IAClE,CAACC,KAAM,MAAOC,MAAO,uCAAUC,MAAO,IAAKC,KAAM,EAAGJ,UAAW,IAEnEV,gBAAiB,EACjBC,cAAe,GAZJ,E,0CAgCnB,WAAU,IAAD,OACDD,EAAkBe,KAAKP,MAAMR,gBAC7BO,EAAUQ,KAAKP,MAAMC,SAAST,IAAoB,GAElDgB,EAAcT,EAAQG,UACtBT,EAAgBc,KAAKP,MAAMP,cAC3BgB,EAAcV,EAAQM,MAAQZ,EAC9BiB,EAAgBH,KAAKP,MAAMC,SAASU,KAAI,SAACC,EAAMtB,GAC/C,OACI,sBAAauB,UAAS,kBAAarB,IAAkBF,EAAE,SAAS,IAAMwB,QAAS,kBAAM,EAAKzB,cAAcC,IAAxG,UACI,qBAAKuB,UAAS,oBAAeD,EAAKN,MAAlC,qEACA,sBAAKO,UAAU,OAAf,UACI,sBAAKA,UAAU,WAAf,UACI,wEACA,4BAEJ,sBAAKA,UAAU,OAAf,UACI,wFACA,qCAAQD,EAAKP,YAEjB,sBAAKQ,UAAU,OAAf,UACI,kGACA,iCAAOD,EAAKV,UAAZ,4BAbFZ,MAoBlB,OACI,qBAAKuB,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,OAAf,SACI,qBAAKA,UAAU,MAAf,wCAEJ,qBAAKA,UAAU,gBAAf,SACKH,OAGT,sBAAKG,UAAS,aAAd,UACI,qBAAKA,UAAU,SACdd,EAAQG,WAAaH,EAAQG,UAAY,GAC1C,qCACI,sBAAKW,UAAU,QAAf,UACI,8GACA,+BAAOd,EAAQK,WAEnB,sBAAKS,UAAU,QAAf,UACI,iGACA,sBAAKA,UAAU,QAAf,UACI,cAAC,IAAD,CAAQE,IAhDlB,EAgDoCC,IAAKR,EAAaV,MAAOL,EAAewB,SAAUV,KAAKb,oBACjF,uBAAOwB,KAAK,SAASpB,MAAOL,EAAewB,SAAUV,KAAKb,0BAGlE,sBAAKmB,UAAU,QAAf,UACI,8GACA,qCAAQJ,QAEZ,qBAAKI,UAAU,cAAf,oFAGJ,qBAAKA,UAAU,eAAf,wD,GA/FSM,IAAMC,WCDvCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.7b5badba.chunk.js","sourcesContent":["import React from \"react\"\nimport Slider from 'rc-slider'\nimport 'rc-slider/assets/index.css'\nimport './App.scss'\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            products: [\n                {name: \"salmon\", title: \"Лосось\", price: 120, rare: 1, inventory: 10},\n                {name: \"mackerel\", title: \"Макрель\", price: 520, rare: 1, inventory: 3},\n                {name: \"sturgeon\", title: \"Осетр\", price: 240, rare: 3, inventory: 15},\n                {name: \"trout\", title: \"Радужная форель\", price: 70, rare: 2, inventory: 5},\n                {name: \"stingray\", title: \"Скат\", price: 230, rare: 2, inventory: 12},\n                {name: \"cod\", title: \"Треска\", price: 700, rare: 3, inventory: 6}\n            ],\n            current_product: 0,\n            count_to_sell: 1\n        }\n    }\n\n    selectProduct = (i) => {\n        this.setState({ current_product: i, count_to_sell: 1 })\n    }\n    changeCountToSell = (count) => {\n        if (typeof count === \"object\")\n            count = parseInt(count.target.value)\n\n        let product = this.state.products[this.state.current_product]\n        if (count > product.inventory)\n            count = product.inventory\n        else if (count < 1)\n            count = 1\n\n        this.setState({ count_to_sell: count || 1 })\n    }\n\n    render() {\n        let current_product = this.state.current_product\n        let product = this.state.products[current_product] || {}\n        let min_to_sell = 1\n        let max_to_sell = product.inventory\n        let count_to_sell = this.state.count_to_sell\n        let sum_to_sell = product.price * count_to_sell\n        let products_list = this.state.products.map((item, i) => {\n            return (\n                <div key={i} className={`product ${current_product===i?\"active\":\"\"}`} onClick={() => this.selectProduct(i)}>\n                    <div className={`type type-${item.rare}`}>Редкий вид</div>\n                    <div className=\"info\">\n                        <div className=\"item big\">\n                            <span>Лосось</span>\n                            <span />\n                        </div>\n                        <div className=\"item\">\n                            <span>Цена за 1шт.</span>\n                            <span>${item.price}</span>\n                        </div>\n                        <div className=\"item\">\n                            <span>В инвентаре:</span>\n                            <span>{item.inventory} шт.</span>\n                        </div>\n                    </div>\n                </div>\n            )\n        })\n\n        return (\n            <div className=\"App\">\n                <div className=\"window\">\n                    <div className=\"products\">\n                        <div className=\"tabs\">\n                            <div className=\"tab\">Рыбы</div>\n                        </div>\n                        <div className=\"products-list\">\n                            {products_list}\n                        </div>\n                    </div>\n                    <div className={`sell-panel`}>\n                        <div className=\"logo\" />\n                        {product.inventory && product.inventory > 0 &&\n                        <>\n                            <div className=\"title\">\n                                <span>Выбранный вид:</span>\n                                <span>{product.title}</span>\n                            </div>\n                            <div className=\"count\">\n                                <span>Количество:</span>\n                                <div className=\"input\">\n                                    <Slider min={min_to_sell} max={max_to_sell} value={count_to_sell} onChange={this.changeCountToSell} />\n                                    <input type=\"number\" value={count_to_sell} onChange={this.changeCountToSell} />\n                                </div>\n                            </div>\n                            <div className=\"title\">\n                                <span>Сумма выплаты:</span>\n                                <span>${sum_to_sell}</span>\n                            </div>\n                            <div className=\"button-sell\">Продать рыбу</div>\n                        </>\n                        }\n                        <div className=\"button-close\">Выход</div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}